{"version":3,"sources":["assets/icons/index.js","Firebase.js","logo.svg","Jos.js","App.js","serviceWorker.js","index.js"],"names":["icons","Object","assign","cilAlignCenter","cilAlignLeft","cilCaretTop","cilCaretBottom","cilAlignRight","cilApplicationsSettings","cilArrowRight","cilArrowTop","cilAsterisk","cilBan","cilBasket","cilBell","cilBold","cilBookmark","cilCalculator","cilCalendar","cilCloudDownload","cilChartPie","cilCheck","cilChevronBottom","cilChevronLeft","cilChevronRight","cilChevronTop","cilCircle","cilCheckCircle","cilCode","cilCommentSquare","cilCreditCard","cilCursor","cilCursorMove","cilDrop","cilDollar","cilEnvelopeClosed","cilEnvelopeLetter","cilEnvelopeOpen","cilEuro","cilGlobeAlt","cilGrid","cilFile","cilFullscreen","cilFullscreenExit","cilGraph","cilHome","cilInbox","cilIndentDecrease","cilIndentIncrease","cilInputPower","cilItalic","cilJustifyCenter","cilJustifyLeft","cilLaptop","cilLayers","cilLightbulb","cilList","cilListNumbered","cilListRich","cilLocationPin","cilLockLocked","cilMagnifyingGlass","cilMap","cilMoon","cilNotes","cilOptions","cilPaperclip","cilPaperPlane","cilPencil","cilPeople","cilPhone","cilPrint","cilPuzzle","cilSave","cilScrubber","cilSettings","cilShare","cilShareAll","cilShareBoxed","cilShieldAlt","cilSpeech","cilSpeedometer","cilSpreadsheet","cilStar","cilSun","cilTags","cilTask","cilTrash","cilUnderline","cilUser","cilUserFemale","cilUserFollow","cilUserUnfollow","cilX","cilXCircle","cilWarning","cifUs","cifBr","cifIn","cifFr","cifEs","cilBriefcase","cifPl","cibSkype","cibFacebook","cilBoatAlt","cibTwitter","cibLinkedin","cibFlickr","cibTumblr","cibXing","cibGithub","cilInstitution","cilSend","cibStackoverflow","cibYoutube","cibDribbble","cibInstagram","cibPinterest","cibVk","cibYahoo","cibBehance","cibReddit","cibVimeo","cibCcMastercard","cibCcVisa","cibStripe","cibPaypal","cibGooglePay","cibCcAmex","firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","module","exports","React","Jos","props","changevalue","database","ref","set","handleChange","e","username","target","value","setState","name","handleClick","state","password","history","push","alert","console","log","this","className","md","onSubmit","bind","type","placeholder","autoComplete","onChange","xs","color","style","width","src","fluid","height","Component","loading","Login","lazy","Home","App","Suspense","fallback","exact","path","render","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"2GAAA,6sCAsIaA,GAAQC,OAAOC,OAAO,GAAI,CACrCC,mBACAC,iBACAC,gBACAC,mBACAC,kBACAC,4BACAC,kBACAC,gBACAC,gBACAC,WACAC,cACAC,YACAC,YACAC,gBACAC,kBACAC,gBACAC,qBACAC,gBACAC,cACAC,sBACAC,oBACAC,qBACAC,mBACAC,eACAC,oBACAC,aACAC,sBACAC,mBACAC,eACAC,mBACAC,aACAC,eACAC,uBACAC,uBACAC,qBACAC,aACAC,iBACAC,aACAC,aACAC,mBACAC,uBACAC,cACAC,aACAC,cACAC,uBACAC,uBACAC,mBACAC,eACAC,sBACAC,oBACAC,eACAC,eACAC,kBACAC,aACAC,qBACAC,iBACAC,oBACAC,mBACAC,wBACAC,YACAC,aACAC,cACAC,gBACAC,kBACAC,mBACAC,eACAC,eACAC,cACAC,cACAC,eACAC,aACAC,iBACAC,iBACAC,cACAC,iBACAC,mBACAC,kBACAC,eACAC,oBACAC,oBACAC,aACAC,YACAC,aACAC,aACAC,cACAC,kBACAC,aACAC,mBACAC,mBACAC,qBACAC,UACAC,gBACAC,iBACC,CACDC,UACAC,UACAC,UACAC,UACAC,UACDC,kBACCC,WACC,CACDC,aACAC,gBACDC,eACCC,eACAC,gBACAC,cACAC,cACAC,YACAC,cACDC,mBACAC,YACCC,qBACAC,eACAC,gBACAC,iBACAC,iBACAC,UACAC,aACAC,eACAC,cACAC,aACAC,oBACAC,cACAC,cACAC,cACAC,iBACAC,iB,gCCvQF,iBAYAC,gBATe,CACbC,OAAQ,0CACRC,WAAY,8BACZC,YAAa,qCACbC,UAAW,cACXC,cAAe,0BACfC,kBAAmB,gBAINN,O,4ECbfO,EAAOC,QAAU,IAA0B,kC,kLCqB3CC,IAAM3I,MAAQA,I,IACO4I,E,kDACnB,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAGVC,YAAc,WACbZ,IAASa,WAAWC,IAAI,QAAQC,IAAI,MALhB,EAOrBC,aAAe,SAACC,GACf,IAAMC,EAAWD,EAAEE,OAAOC,MAC1B,EAAKC,SAAL,eAAgBJ,EAAEE,OAAOG,KAAMJ,KATX,EAWrBK,YAAc,WACiB,UAAvB,EAAKC,MAAMN,UAA+C,UAAvB,EAAKM,MAAMC,SAChD,EAAKd,MAAMe,QAAQC,KAAK,SAExBC,MAAM,8BAbR,EAAKJ,MAAQ,CAACN,SAAU,GAAGO,SAAU,IAFpB,E,qDAqBnB,OAFAI,QAAQC,IAAI,WAAa9B,KACzB6B,QAAQC,IAAI,WAAaC,KAAKP,MAAMC,UAEtC,yBAAKO,UAAU,sDACT,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAMA,UAAU,0BACd,kBAAC,IAAD,CAAMC,GAAG,KACP,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOD,UAAU,OACf,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOE,SAAUH,KAAKR,YAAYY,KAAKJ,OACrC,yCACA,uBAAGC,UAAU,cAAb,wBACA,kBAAC,IAAD,CAAaA,UAAU,QACrB,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOV,KAAK,eAGhB,kBAAC,IAAD,CAAQA,KAAK,WAAWc,KAAK,OAAOC,YAAY,WAAWC,aAAa,WAAWC,SAAUR,KAAKf,aAAamB,KAAKJ,SAEtH,kBAAC,IAAD,CAAaC,UAAU,QACrB,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOV,KAAK,sBAGhB,kBAAC,IAAD,CAAQA,KAAK,WAAWc,KAAK,WAAWC,YAAY,WAAWC,aAAa,mBAAoBC,SAAUR,KAAKf,aAAamB,KAAKJ,SAEnI,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAMS,GAAG,KACP,kBAAC,IAAD,CAASJ,KAAK,SAASK,MAAM,UAAUT,UAAU,QAAjD,kBAMV,kBAAC,IAAD,CAAOA,UAAU,4CAA4CU,MAAO,CAAEC,MAAO,QAC3E,kBAAC,IAAD,CAAWX,UAAU,eACnB,6BACE,kBAAC,IAAD,CACTY,IAAI,iLACJC,OAAK,EACLb,UAAU,OACVW,MAAM,MACNG,OAAO,SAEE,6CACA,gM,GApEarC,IAAMsC,Y,+GChBjCC,EACJ,yBAAKhB,UAAU,oBACb,yBAAKA,UAAU,iCAIbiB,EAAQxC,IAAMyC,MAAK,kBAAM,2CACzBC,EAAO1C,IAAMyC,MAAK,kBAAM,iCAefE,MAbf,WACE,OACI,kBAAC,IAAD,KACI,kBAAC,IAAMC,SAAP,CAAgBC,SAAUN,GACxB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOO,OAAK,EAACC,KAAK,IAAIlC,KAAK,aAAamC,OAAQ,SAAA9C,GAAK,OAAI,kBAACsC,EAAUtC,MACpE,kBAAC,IAAD,CAAO4C,OAAK,EAACC,KAAK,QAAQlC,KAAK,OAAOmC,OAAQ,SAAA9C,GAAK,OAAI,kBAACwC,EAASxC,UCT3D+C,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,YCbNrD,IAAM3I,MAAQA,IACdiM,IAASN,OACP,kBAAC,IAAMO,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACL7C,QAAQ6C,MAAMA,EAAMC,c","file":"static/js/main.87f2da20.chunk.js","sourcesContent":["import {\n  cibSkype,\n  cibFacebook,\n\tcilBoatAlt,\n  cibTwitter,\n  cibLinkedin,\n  cibFlickr,\n  cibTumblr,\n  cibXing,\n\tcilInstitution,\n  cibGithub,\n\tcilSend,\n  cilCaretTop,\n  cilCaretBottom,\n  cibStackoverflow,\n  cibYoutube,\n  cibDribbble,\n  cibInstagram,\n  cibPinterest,\n  cibVk,\n  cibYahoo,\n  cibBehance,\n  cibReddit,\n  cibVimeo,\n  cibCcMastercard,\n  cibCcVisa,\n  cibStripe,\n  cibPaypal,\n  cibGooglePay,\n  cibCcAmex\n} from '@coreui/icons'\nimport {\n  cifUs,\n  cifBr,\n  cifIn,\n  cifFr,\n  cifEs,\n  cifPl\n} from '@coreui/icons'\nimport {\n  cilAlignCenter,\n  cilAlignLeft,\n  cilAlignRight,\n  cilApplicationsSettings,\n  cilArrowRight,\n  cilArrowTop,\n  cilAsterisk,\n  cilBan,\n  cilBasket,\n  cilBell,\n  cilBold,\n  cilBookmark,\n  cilCalculator,\n  cilCalendar,\n  cilCloudDownload,\n  cilChartPie,\n  cilCheck,\n  cilChevronBottom,\n  cilChevronLeft,\n  cilChevronRight,\n  cilChevronTop,\n  cilCircle,\n  cilCheckCircle,\n  cilCode,\n  cilCommentSquare,\n  cilCreditCard,\n  cilCursor,\n  cilCursorMove,\n  cilDrop,\n  cilDollar,\n  cilEnvelopeClosed,\n  cilEnvelopeLetter,\n  cilEnvelopeOpen,\n  cilEuro,\n  cilGlobeAlt,\n  cilGrid,\n  cilFile,\n  cilFullscreen,\n  cilFullscreenExit,\n  cilGraph,\n  cilHome,\n  cilInbox,\n  cilIndentDecrease,\n  cilIndentIncrease,\n  cilInputPower,\n  cilItalic,\n  cilJustifyCenter,\n  cilJustifyLeft,\n  cilLaptop,\n  cilLayers,\n  cilLightbulb,\n  cilList,\n  cilListNumbered,\n  cilListRich,\n  cilLocationPin,\n  cilLockLocked,\n  cilMagnifyingGlass,\n  cilMap,\n  cilMoon,\n  cilNotes,\n  cilOptions,\n  cilPaperclip,\n  cilPaperPlane,\n  cilPencil,\n  cilPeople,\n\tcilBriefcase,\n  cilPhone,\n  cilPrint,\n  cilPuzzle,\n  cilSave,\n  cilScrubber,\n  cilSettings,\n  cilShare,\n  cilShareAll,\n  cilShareBoxed,\n  cilShieldAlt,\n  cilSpeech,\n  cilSpeedometer,\n  cilSpreadsheet,\n  cilStar,\n  cilSun,\n  cilTags,\n  cilTask,\n  cilTrash,\n  cilUnderline,\n  cilUser,\n  cilUserFemale,\n  cilUserFollow,\n  cilUserUnfollow,\n  cilX,\n  cilXCircle,\n  cilWarning\n} from '@coreui/icons'\n\nexport const icons = Object.assign({}, {\n  cilAlignCenter,\n  cilAlignLeft,\n  cilCaretTop,\n  cilCaretBottom,\n  cilAlignRight,\n  cilApplicationsSettings,\n  cilArrowRight,\n  cilArrowTop,\n  cilAsterisk,\n  cilBan,\n  cilBasket,\n  cilBell,\n  cilBold,\n  cilBookmark,\n  cilCalculator,\n  cilCalendar,\n  cilCloudDownload,\n  cilChartPie,\n  cilCheck,\n  cilChevronBottom,\n  cilChevronLeft,\n  cilChevronRight,\n  cilChevronTop,\n  cilCircle,\n  cilCheckCircle,\n  cilCode,\n  cilCommentSquare,\n  cilCreditCard,\n  cilCursor,\n  cilCursorMove,\n  cilDrop,\n  cilDollar,\n  cilEnvelopeClosed,\n  cilEnvelopeLetter,\n  cilEnvelopeOpen,\n  cilEuro,\n  cilGlobeAlt,\n  cilGrid,\n  cilFile,\n  cilFullscreen,\n  cilFullscreenExit,\n  cilGraph,\n  cilHome,\n  cilInbox,\n  cilIndentDecrease,\n  cilIndentIncrease,\n  cilInputPower,\n  cilItalic,\n  cilJustifyCenter,\n  cilJustifyLeft,\n  cilLaptop,\n  cilLayers,\n  cilLightbulb,\n  cilList,\n  cilListNumbered,\n  cilListRich,\n  cilLocationPin,\n  cilLockLocked,\n  cilMagnifyingGlass,\n  cilMap,\n  cilMoon,\n  cilNotes,\n  cilOptions,\n  cilPaperclip,\n  cilPaperPlane,\n  cilPencil,\n  cilPeople,\n  cilPhone,\n  cilPrint,\n  cilPuzzle,\n  cilSave,\n  cilScrubber,\n  cilSettings,\n  cilShare,\n  cilShareAll,\n  cilShareBoxed,\n  cilShieldAlt,\n  cilSpeech,\n  cilSpeedometer,\n  cilSpreadsheet,\n  cilStar,\n  cilSun,\n  cilTags,\n  cilTask,\n  cilTrash,\n  cilUnderline,\n  cilUser,\n  cilUserFemale,\n  cilUserFollow,\n  cilUserUnfollow,\n  cilX,\n  cilXCircle,\n  cilWarning\n}, {\n  cifUs,\n  cifBr,\n  cifIn,\n  cifFr,\n  cifEs,\n\tcilBriefcase,\n  cifPl\n}, {\n  cibSkype,\n  cibFacebook,\n\tcilBoatAlt,\n  cibTwitter,\n  cibLinkedin,\n  cibFlickr,\n  cibTumblr,\n  cibXing,\n  cibGithub,\n\tcilInstitution,\n\tcilSend,\n  cibStackoverflow,\n  cibYoutube,\n  cibDribbble,\n  cibInstagram,\n  cibPinterest,\n  cibVk,\n  cibYahoo,\n  cibBehance,\n  cibReddit,\n  cibVimeo,\n  cibCcMastercard,\n  cibCcVisa,\n  cibStripe,\n  cibPaypal,\n  cibGooglePay,\n  cibCcAmex\n})\n","import React from 'react';\r\nimport * as firebase from \"firebase\";\r\n\r\nconst config = {\r\n  apiKey: \"AIzaSyDH-Yc3nlfKYlGqO1OvVWttoWhTG0Y23Lk\",\r\n  authDomain: \"controlmyac.firebaseapp.com\",\r\n  databaseURL: \"https://controlmyac.firebaseio.com\",\r\n  projectId: \"controlmyac\",\r\n  storageBucket: \"controlmyac.appspot.com\",\r\n  messagingSenderId: \"93762379963\"\r\n};\r\n \r\nfirebase.initializeApp(config);\r\nexport default firebase;\r\n\r\n\r\n\r\n\r\n","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react';\r\nimport firebase from './Firebase';\r\nimport {\r\n  CButton,\r\n  CCard,\r\n  CCardBody,\r\n  CCardGroup,\r\n  CCol,\r\n  CContainer,\r\n  CForm,\r\n  CInput,\r\n  CImg,\r\n  CInputGroup,\r\n  CInputGroupPrepend,\r\n  CInputGroupText,\r\n  CRow\r\n} from '@coreui/react';\r\nimport CIcon from '@coreui/icons-react';\r\nimport './scss/style.scss';\r\nimport { icons } from './assets/icons/index.js';\r\nimport { HashRouter, Route, Switch, Redirect } from 'react-router-dom';\r\nReact.icons = icons\r\nexport default class Jos extends React.Component{\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {username: \"\",password: \"\"}\r\n  }\t\r\nchangevalue = () => {\r\n\tfirebase.database().ref('LED1').set(\"1\");\r\n}\r\nhandleChange = (e) =>{\r\n\tconst username = e.target.value;\r\n\tthis.setState({[e.target.name]:username})\r\n\t};\r\nhandleClick = () =>{\r\n    if (this.state.username == \"taufiq\" && this.state.password == \"mantab\") {\r\n      this.props.history.push(\"/Home\")\r\n    } else {\r\n    \t{alert(\"Salah Username / Password\")}\r\n    }\r\n  }\r\n\trender(){\r\n\t\tconsole.log('darisini' , firebase)\r\n\t\tconsole.log('darisini' , this.state.password)\r\n\t\treturn(\r\n<div className=\"c-app c-default-layout flex-row align-items-center\">\r\n      <CContainer>\r\n        <CRow className=\"justify-content-center\">\r\n          <CCol md=\"8\">\r\n            <CCardGroup>\r\n              <CCard className=\"p-4\">\r\n                <CCardBody>\r\n                  <CForm onSubmit={this.handleClick.bind(this)} >\r\n                    <h1>Log Masuk</h1>\r\n                    <p className=\"text-muted\">Masukkan Credentials</p>\r\n                    <CInputGroup className=\"mb-3\">\r\n                      <CInputGroupPrepend>\r\n                        <CInputGroupText>\r\n                          <CIcon name=\"cil-user\" />\r\n                        </CInputGroupText>\r\n                      </CInputGroupPrepend>\r\n                      <CInput name=\"username\" type=\"text\" placeholder=\"Username\" autoComplete=\"username\" onChange={this.handleChange.bind(this)}/>\r\n                    </CInputGroup>\r\n                    <CInputGroup className=\"mb-4\">\r\n                      <CInputGroupPrepend>\r\n                        <CInputGroupText>\r\n                          <CIcon name=\"cil-lock-locked\" />\r\n                        </CInputGroupText>\r\n                      </CInputGroupPrepend>\r\n                      <CInput name=\"password\" type=\"password\" placeholder=\"Password\" autoComplete=\"current-password\"  onChange={this.handleChange.bind(this)} />\r\n                    </CInputGroup>\r\n                    <CRow>\r\n                      <CCol xs=\"6\">\r\n                        <CButton type=\"submit\" color=\"primary\" className=\"px-4\">Log Masuk</CButton>\r\n                      </CCol>\r\n                    </CRow>\r\n                  </CForm>\r\n                </CCardBody>\r\n              </CCard>\r\n              <CCard className=\"text-white bg-primary py-5 d-md-down-none\" style={{ width: '44%' }}>\r\n                <CCardBody className=\"text-center\">\r\n                  <div>\r\n                    <CImg\r\n      \t\t\t\t\tsrc=\"https://firebasestorage.googleapis.com/v0/b/controlmyac.appspot.com/o/ac-jfmc-triple-inverter-split-powered-digital-2.png?alt=media&token=92991e22-0f02-4006-b819-06c5b40710a6\"\r\n      \t\t\t\t\tfluid\r\n      \t\t\t\t\tclassName=\"mb-2\"\r\n      \t\t\t\t\twidth=\"70%\"\r\n      \t\t\t\t\theight=\"auto\"\r\n    \t\t\t\t/>\r\n                    <h2>Control My AC</h2>\r\n                    <p>Control My AC adalah Proyek iseng-iseng di long weekend hari kemerdekaan tahun 2020 yang dibuat oleh Taufiq Mahendra terinspirasi dari story RudyTRS.</p>\r\n                  </div>\r\n                </CCardBody>\r\n              </CCard>\r\n            </CCardGroup>\r\n          </CCol>\r\n        </CRow>\r\n      </CContainer>\r\n    </div>\t\t\t\r\n///<button onClick={this.changevalue}>Changethis</button>\r\n\t\t\t)\r\n\t}\r\n}","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport Jos from './Jos';\nimport './scss/style.scss';\nimport { HashRouter, Route, Switch } from 'react-router-dom';\n\nconst loading = (\n  <div className=\"pt-3 text-center\">\n    <div className=\"sk-spinner sk-spinner-pulse\"></div>\n  </div>\n)\n\nconst Login = React.lazy(() => import('./Jos'));\nconst Home = React.lazy(() => import('./Jos2'));\n\nfunction App() {\n  return (\n      <HashRouter>\n          <React.Suspense fallback={loading}>\n            <Switch>\n              <Route exact path=\"/\" name=\"Login Page\" render={props => <Login {...props}/>} />\n              <Route exact path=\"/Home\" name=\"Home\" render={props => <Home {...props}/>} />              \n            </Switch>\n          </React.Suspense>\n      </HashRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { icons } from './assets/icons/index.js'\nReact.icons = icons\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}